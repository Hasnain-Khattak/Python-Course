********************************* Mini Project: Student Management System ****************************************

In this project, students will create a Student Management System where they can:

- Add new students: Store student details like name, age, and marks in a dictionary.

- Update student marks: Modify the marks for a specific student.

- Display a student's details: Retrieve and display details for a particular student.

- Display all students: Print the details of all students in a formatted way.
********************************** Requirements:

- Use dictionaries to store and manage student data.

- Use functions to organize different actions.

- Use loops to allow the user to interact with the system multiple times.

- Use conditionals to control the flow of the program.

- Use string methods where applicable (e.g., formatting names).

- Allow user input to dynamically add, update, and retrieve student details.
************************************Project Structure:
1. Main Menu
Create a main menu that allows the user to:

- Add a new student.
- Update marks.
- Display a student's details.
- Display all students.
2. Student Details in a Dictionary
Each student is stored as a dictionary with keys: name, age, and marks.

